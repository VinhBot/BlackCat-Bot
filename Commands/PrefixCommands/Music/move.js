const { EmbedBuilder } = require("discord.js");
const path = require("node:path");
module.exports = {
  name: path.parse(__filename).name,
  usage: path.parse(__filename).name,
  aliases: [""], // l·ªánh ph·ª•
  description: "Di chuy·ªÉn m·ªôt b√†i h√°t ƒë·∫øn n∆°i kh√°c", // m√¥ t·∫£ l·ªánh
  userPerms: [], // Administrator, ....
  owner: false, //: t·∫Øt // true : b·∫≠t
  category:"Music", // t√™n folder ch·ª©a l·ªánh
  cooldown: 5, // th·ªùi gian c√≥ th·ªÉ t√°i s·ª≠ d·ª•ng l·ªánh
  run: async(client, message, args, prefix) => {
    const VoiceChannel = message.member.voice.channel;
    if(!VoiceChannel) return message.reply({ content: "B·∫°n ch∆∞a tham gia k√™nh voice" });
    let newQueue = client.distube.getQueue(message.guildId);
		if(!newQueue || !newQueue.songs || newQueue.songs.length == 0) return message.reply({
			embeds: [new EmbedBuilder().setColor("Random").setTitle("Danh s√°ch nh·∫°c tr·ªëng")],
	  });
    if(!args[0]) return message.reply({
      content: "**Vui l√≤ng th√™m V·ªã tr√≠ b√†i h√°t!**"
    });
    if(!args[1]) return message.reply({
      content: "**Vui l√≤ng th√™m V·ªã tr√≠ c·∫ßn di chuy·ªÉn!**"
    });
    let songIndex = Number(args[0]);
    if(!songIndex) return message.reply({
      content: "**Vui l√≤ng th√™m S·ªê V·ªã tr√≠ b√†i h√°t!**"
    });
    let position = Number(args[1]);
	  if(!position) return message.reply({
      content: "**Vui l√≤ng th√™m S·ªê Di chuy·ªÉn V·ªã tr√≠!**"
    });
    if(position >= newQueue.songs.length || position < 0) position = -1;
		if(songIndex > newQueue.songs.length - 1) return message.reply({
      content: `B√†i h√°t n√†y kh√¥ng t·ªìn t·∫°i\n**B√†i h√°t cu·ªëi c√πng trong H√†ng ƒë·ª£i, Ch·ªâ ƒë·∫øn m·ª•c: \`${newQueue.songs.length}\`**`
    });
		if(position == 0) return message.reply({
      content: " **Kh√¥ng th·ªÉ di chuy·ªÉn B√†i h√°t trong khi Ph√°t B√†i h√°t!**"
    });
    let song = newQueue.songs[songIndex];
		newQueue.songs.splice(songIndex);
		newQueue.addToQueue(song, position)
	  return message.reply({
      content: `üìë ƒê√£ di chuy·ªÉn **${song.name}** ƒë·∫øn v·ªã tr√≠ **\`${position}\`** ngay sau **_${newQueue.songs[position - 1].name}_!**`
    });
  },
};